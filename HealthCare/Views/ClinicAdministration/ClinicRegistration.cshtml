@model ClinicAdminModel


@{
    ViewData["Title"] = "View";
    Layout = "~/Views/Shared/_ContentNavbarLayout.cshtml";
}

<div class="row" style="margin-top:70px">
    <div class="col-md-12 col-lg-2 ">
    </div>



    <script>
        function showPopup(message) {
            var popup = document.getElementById("popupMessage");
            var popupText = document.getElementById("popupMessageText");
            var popupOKButton = document.getElementById("popupOKButton");

            popupText.textContent = message; // Set the message text
            popup.style.display = "block";

            // Close popup when OK button is clicked
            popupOKButton.addEventListener("click", function () {
                closePopup();
            });

            // Close popup when clicking outside of the message box
            document.addEventListener("click", function (event) {
                if (!popup.contains(event.target) && !popupOKButton.contains(event.target)) {
                    closePopup();
                }
            });
        }

        function closePopup() {
            var popup = document.getElementById("popupMessage");
            popup.style.display = "none"; // Hide the popup
        }

        function handleMessages(message) {
            showPopup(message);
        }
    </script>

    <div id="popupMessage" class="dividerblack popborder" style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: #f0f0f0; color: #8c62c9; padding: 30px; border-radius: 10px; z-index: 1000; display: none; text-align: center;">
        <span id="popupMessageText" style="display: block; margin-bottom: 10px;"></span>
        <button id="popupOKButton" style="padding: 10px 20px; color: #8c62c9; border: none; border-radius: 5px; cursor: pointer;">OK</button>
    </div>

    <style>
        .popborder {
            border: 10px solid #8c62c9;
        }
    </style>




    <form asp-controller="ClinicAdministration">
        <div class="row">
            <div class="col-md-12 col-lg-2">
                <div class="form-floating form-floating-outline mb-4">
                </div>
            </div>

            <div class="col-md-12 col-lg-8 ">
                <div class="card">
                    <div class="card-body " style="background-color:#8c62c9">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <div class="container">
                                <h2 class="centered text-white" style="font-family:'Lucida Bright'">Facility Registration</h2>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>



        <div class="row" style="height:5%">
        </div>



        <div class="row gy-4">

            <div class="col-md-12 col-lg-2">
                <div class="form-floating form-floating-outline mb-4">
                </div>
            </div>


            <div class="col-md-12 col-lg-3">


                <div class="form-floating form-floating-outline mb-4">

                    <input asp-for="FacilityID" class="form-control" placeholder="Facility ID" value="@Model.FacilityID" required />
                    <label asp-for="FacilityID" class="control-label">Facility ID</label>
                    <span asp-validation-for="FacilityID" class="text-danger"></span>
                </div>

                <div class="form-floating form-floating-outline mb-4">
                    @{
                        var fac = ((IEnumerable<HospitalRegistrationModel>)ViewData["hospital"])
                        .Select(m => new SelectListItem
            {
                Value = m.HospitalID.ToString(), // Assuming ScreenId is of type int
                Text = $"{m.HospitalName}"
            });
                    }

                    @Html.DropDownListFor(model => model.Hospital, fac, "Select Hospital", new { @class = "form-control"})
                    <label asp-for="Hospital" class="control-label">Hospital</label>

                </div>


            </div>
            <div class="col-md-12 col-lg-3">


                <div class="form-floating form-floating-outline mb-4">
                    <input asp-for="ClinicName" class="form-control" placeholder="Clinic Name" value="@Model.ClinicName" oninput="validateInput(this)" required />
                    <label asp-for="ClinicName" class="control-label">Clinic Name</label>

                    <span asp-validation-for="ClinicName" class="text-danger"></span>
                </div>
            </div>

            <div class="col-md-12 col-lg-4">
                <div class="form-floating form-floating-outline mb-4">
                    <button type="submit" class="btn btn-primary" asp-action="GetClinic" formmethod="get" value="Get">Get</button>
                </div>
            </div>


        </div>




        <div class="row" style="height:5%">
        </div>


        <div class="row">
            <div class="col-md-12 col-lg-2">
                <div class="form-floating form-floating-outline mb-4">
                </div>
            </div>
            <div class="col-md-12 col-lg-4">
                <div class="card">
                    <div class="card-body " style="background-image: linear-gradient(to right, #FFFFFF 0%, #FFFFFF 51%, #ece5f6 100%);">


                        <div class="input-group input-group-merge speech-to-text form-floating form-floating-outline mb-4">
                            <textarea asp-for="ClinicAddress" class="form-control" placeholder="Clinic Address" aria-describedby="text-to-speech-addon"></textarea>
                            <label asp-for="ClinicAddress" class="control-label">Clinic Address</label>
                            <span class="input-group-text" id="text-to-speech-addon">
                                <i class="mdi mdi-microphone-outline cursor-pointer text-to-speech-toggle"></i>
                            </span>
                            <span asp-validation-for="ClinicAddress" class="text-danger"></span>
                        </div>

                        <div class="form-floating form-floating-outline mb-4">
                            <input asp-for="City" class="form-control" placeholder="City" value="@Model.City" />
                            <label asp-for="City" class="control-label">City</label>

                            <span asp-validation-for="City" class="text-danger"></span>
                        </div>
                        <div class="form-floating form-floating-outline mb-4">
                            <input asp-for="State" class="form-control" placeholder="State" value="@Model.State" />
                            <label asp-for="State" class="control-label">State</label>

                            <span asp-validation-for="State" class="text-danger"></span>
                        </div>
                        <div class="form-floating form-floating-outline mb-4">
                            <input asp-for="PostalCode" class="form-control" placeholder="PostalCode" id="Pin" value="@Model.PostalCode" pattern="^\d{6}$" title="PostalCode Number should be in correct format" />
                            <label asp-for="PostalCode" class="control-label">Postal Code</label>

                            <span asp-validation-for="PostalCode" class="text-danger"></span>

                        </div>
                        <div class="form-floating form-floating-outline mb-4">
                            <input asp-for="ClinicPhoneNumber" class="form-control" placeholder="Clinic PhoneNumber" value="@Model.ClinicPhoneNumber" id="PhoneNumber" pattern="^\d{10}$" title="Mobile Number should be exactly 10 digits" />
                            <label asp-for="ClinicPhoneNumber" class="control-label">Clinic PhoneNumber</label>

                            <span asp-validation-for="ClinicPhoneNumber" class="text-danger"></span>

                        </div>

                    </div>
                </div>


            </div>
            <div class="col-md-12 col-lg-4">
                <div class="card">
                    <div class="card-body " style="background-image: linear-gradient(to right, #FFFFFF 0%, #FFFFFF 51%, #ece5f6 100%);">

                        <div class="form-floating form-floating-outline mb-4">
                            <input asp-for="ClinicEmailAddress" class="form-control" id="EmailId" type="email" placeholder="Clinic EmailAddress" value="@Model.ClinicEmailAddress" />
                            <label asp-for="ClinicEmailAddress" class="control-label">Clinic EmailAddress</label>

                            <span asp-validation-for="ClinicEmailAddress" id="emailError" class="text-danger">Invalid email format</span>

                        </div>
                        <div class="form-floating form-floating-outline mb-4">
                            <input asp-for="FromHour" class="form-control" placeholder="FromHour" type="time" value="@Model.FromHour" />
                            <label asp-for="FromHour" class="control-label">FromHour</label>

                            <span asp-validation-for="FromHour" class="text-danger"></span>

                        </div>
                        <div class="form-floating form-floating-outline mb-4">
                            <input asp-for="ToHour" class="form-control" placeholder="ToHour" type="time" value="@Model.ToHour" />
                            <label asp-for="ToHour" class="control-label">ToHour</label>

                            <span asp-validation-for="ToHour" class="text-danger"></span>

                        </div>

                        <div class="form-floating form-floating-outline mb-4">
                            <div class="container">


                                <button type="submit" style="centered" class="btn btn-primary" asp-action="AddClinic" value="Save">Save</button>


                                <button type="submit" style="centered" class="btn btn-primary" asp-action="AddClinic" name="buttontype" value="Delete">Delete</button>

                               

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12 col-lg-2">
                <div class="form-floating form-floating-outline mb-4">
                </div>
            </div>


        </div>

        @if (ViewBag.Message != null)
        {
            <script>
                handleMessages("@ViewBag.Message");
            </script>
        }

    </form>


    <script>
        function validateInput(input) {
            // Store the cursor position
            const cursorPos = input.selectionStart;

            // Replace invalid characters
            input.value = input.value.replace(/[^A-Za-z\s]/g, '');

            // Restore cursor position
            input.setSelectionRange(cursorPos, cursorPos);
        }
    </script>



    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const pincodeInput = document.getElementById('Pin');

            pincodeInput.addEventListener('input', function (e) {
                // Remove non-numeric characters
                this.value = this.value.replace(/\D/g, '');
            });

            pincodeInput.addEventListener('keydown', function (e) {
                // Allow backspace, delete, tab, escape, enter, and arrow keys
                if ([46, 8, 9, 27, 13, 37, 38, 39, 40].indexOf(e.keyCode) !== -1) {
                    return;
                }
                // Prevent typing if the input already has 6 characters
                if (this.value.length >= 6) {
                    e.preventDefault();
                }
            });
        });
    </script>


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const phoneInput = document.getElementById('PhoneNumber');

            phoneInput.addEventListener('input', function (e) {
                // Remove non-numeric characters
                this.value = this.value.replace(/\D/g, '');
            });

            phoneInput.addEventListener('keydown', function (e) {
                // Allow backspace, delete, tab, escape, enter, and arrow keys
                if ([46, 8, 9, 27, 13, 37, 38, 39, 40].indexOf(e.keyCode) !== -1) {
                    return;
                }
                // Prevent typing if the input already has 10 characters
                if (this.value.length >= 10) {
                    e.preventDefault();
                }
            });
        });
    </script>


    <script>

        const emailInput = document.getElementById('EmailId');
        const emailError = document.getElementById('emailError');

        window.addEventListener('DOMContentLoaded', function () {
            emailError.style.display = 'none';
        });

        // Validate email format when typing
        emailInput.addEventListener('input', function () {
            // Check if the email is valid using the built-in checkValidity function
            if (!emailInput.checkValidity()) {
                emailError.style.display = 'inline'; // Show error message
            } else {
                emailError.style.display = 'none'; // Hide error message
            }
        });

        // Prevent form submission if the email is invalid
        document.getElementById('ClinicAdmin').addEventListener('submit', function (e) {
            if (!emailInput.checkValidity()) {
                emailError.style.display = 'inline'; // Show error message
                e.preventDefault(); // Prevent form submission
            }
        });


    </script>
