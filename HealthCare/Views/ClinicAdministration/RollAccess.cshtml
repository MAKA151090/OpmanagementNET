@using System.Collections
@model HealthCare.Models.RollAccessModel

@{
    ViewData["Title"] = "RollAccess";
    Layout = "~/Views/Shared/_ContentNavbarLayout.cshtml";
}


@section PageStyles {
    <link rel="stylesheet" href="~/vendor/css/pages/page-auth.css">
}
<form>

    <div class="row">
        <div class="col-md-12 col-lg-2">
        </div>
        <div class="col-md-12 col-lg-8">
            <div class="card">
                <div class="card-body " style="background-color:#8c62c9">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <div class="container">
                            <h2 class="centered text-white" style="font-family:'Lucida Bright'">RollAccess</h2>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />

    <div class="row" style="height:8%">
    </div>

    <div class="row gy-4">
        <div class="col-md-12 col-lg-2">
        </div>
        <div class="col-md-12 col-lg-8">
            <div class="card">
                <div class="card-body " style="background-image: linear-gradient(to right, #FFFFFF 0%, #FFFFFF 51%, #ece5f6 100%);">
                   
                    <div class="form-floating form-floating-outline mb-4">
                        @{
                            var rollList = ((IEnumerable<RollTypeMaster>)ViewData["rollid"])
                            .Select(m => new SelectListItem
            {
                Value = m.RollID.ToString(), // Assuming ScreenId is of type int
                Text = $"{m.RollID} - {m.RollName}"
            });
                        }

                        @Html.DropDownListFor(model => model.RollID, rollList, "Select Roll ID", new { @class = "form-control" })
                        <label asp-for="RollID" class="control-label"></label>
                        <span asp-validation-for="RollID" class="text-danger"></span>
                    </div>

                    <div class="form-floating form-floating-outline mb-4">
                        @{
                            var screenList = ((IEnumerable<ScreenMasterModel>)ViewData["screenid"])
                            .Select(m => new SelectListItem
            {
                Value = m.ScreenId.ToString(), // Assuming ScreenId is of type int
                Text = $"{m.ScreenId} - {m.ScreenName}"
            });
                        }

                        @Html.DropDownListFor(model => model.ScreenID, screenList, "Select Screen", new { @class = "form-control" })
                        <label asp-for="ScreenID" class="control-label"></label>
                        <span asp-validation-for="ScreenID" class="text-danger"></span>
                    </div>

                    <div class="form-floating form-floating-outline mb-4">
                        <div class="row gy-4">
                            <div class="col-md-12 col-lg-2">
                            </div>
                            <div class="col-md-12 col-lg-4">
                        <div class="form-group">
                            <label class="control-label">ReadWriteAccess:</label><br />
                            <div class="form-check form-check-inline">
                                <input asp-for="Access" class="form-check-input" type="radio" value="R" id="ReadRadio" />
                                <label class="form-check-label" for="ReadRadio">Read</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input asp-for="Access" class="form-check-input" type="radio" value="W" id="WriteRadio" />
                                <label class="form-check-label" for="WriteRadio">Write</label>
                            </div>
                            <span asp-validation-for="Access" class="text-danger"></span>
                        </div>
                            </div>
                                <div class="col-md-12 col-lg-4">
                            <label class="control-label">Authorized:</label><br />
                            <div class="form-check form-check-inline">
                                <input asp-for="Authorized" class="form-check-input" type="radio" value="1" id="YesRadio" />
                                <label class="form-check-label" for="YesRadio">Yes</label>
                            </div>
                            
                               
                            <div class="form-check form-check-inline">
                                <input asp-for="Authorized" class="form-check-input" type="radio" value="0" id="NoRadio" />
                                <label class="form-check-label" for="NORadio">NO</label>
                            </div>
                            <span asp-validation-for="Authorized" class="text-danger"></span>
                            </div>
                            <div class="col-md-12 col-lg-2">
                            </div>
                            </div>
                        <br />


                    </div>
                </div>


            </div>


            
            </div>
        </div>
    </div>
        <br />
        <div class="form-group">
            <center>
                <button type="submit" style="width:180px" asp-action="GetRollAccess" value="Save" class="btn btn-primary">Save</button>

                @*     <button type="submit" style="width:180px" value="Create" asp-action="SaveResourceTypeID" class="btn btn-primary">Save</button> *@
                @if (ViewBag.Message != null)
                {
                    <div class="alert alert-success">


                        @ViewBag.Message
                    </div>
                }
            </center>
        </div>


</form>

