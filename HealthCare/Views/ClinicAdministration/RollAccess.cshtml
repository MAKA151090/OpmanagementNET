@using System.Collections
@model HealthCare.Models.RollAccessModel

@{
    ViewData["Title"] = "RollAccess";
    Layout = "~/Views/Shared/_ContentNavbarLayout.cshtml";
}

<div class="card xl-6">
    <div class="card-body pt-2 mt-1">
        <div class="card-header d-flex justify-content-between align-items-center" style="height: 50px;">
            <h2 class="text-primary mb-1"> RollAccess</h2>
            <small class="text-muted float-end"></small>

        </div>
    </div>



        <form asp-action="RollAccess">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="row gy-4">

            <div class="col-md-12 col-lg-1">
            </div>
            <div class="col-md-12 col-lg-4">
                <div class="card">
                    <div class="card-body">

                        <div class="form-floating form-floating-outline mb-4">
                            <input asp-for="RollID" class="form-control" placeholder="RollID" />
                <label asp-for="RollID" class="control-label"></label>
                
                <span asp-validation-for="RollID" class="text-danger"></span>
            </div>
            <div class="form-floating form-floating-outline mb-4">
    @{
        var screenList = ((IEnumerable<ScreenMasterModel>)ViewData["screenid"])
                            .Select(m => new SelectListItem
                            {
                                Value = m.ScreenId.ToString(), // Assuming ScreenId is of type int
                                Text = $"{m.ScreenId} - {m.ScreenName}" 
                            });
    }

    @Html.DropDownListFor(model => model.ScreenID, screenList, "Select Screen", new { @class = "form-control" })
    <label asp-for="ScreenID" class="control-label"></label>
    <span asp-validation-for="ScreenID" class="text-danger"></span>
</div>
                       @*  <div class="form-floating form-floating-outline mb-4">
                           @{ var screenList = ((IEnumerable<ScreenMasterModel>
                                )ViewData["screenid"])
                                .Select(m => new SelectListItem
                                {
                                Value = m.ScreenId.ToString(), // Assuming ScreenId is of type int
                                Text = $"{m.ScreenId}- {m.ScreenName}" 
                                });
                                @Html.DropDownListFor(model => model.ScreenID, screenList, "Select Screen")
                            }
                            <span asp-validation-for="ScreenID" class="text-danger"></span>
            </div> *@
                        <div class="form-floating form-floating-outline mb-4">
                            <input asp-for="Access" class="form-control" placeholder="Access" />
                <label asp-for="Access" class="control-label"></label>
                
                <span asp-validation-for="Access" class="text-danger"></span>
            </div>
            
           
           @*  <div class="form-group">
                <label asp-for="lastUpdatedDate" class="control-label"></label>
                <input asp-for="lastUpdatedDate" class="form-control" />
                <span asp-validation-for="lastUpdatedDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="lastUpdatedUser" class="control-label"></label>
                <input asp-for="lastUpdatedUser" class="form-control" />
                <span asp-validation-for="lastUpdatedUser" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="lastUpdatedMachine" class="control-label"></label>
                <input asp-for="lastUpdatedMachine" class="form-control" />
                <span asp-validation-for="lastUpdatedMachine" class="text-danger"></span>
            </div> *@
            <br />
            <div class="form-group">
                <center>
                <button type="submit" asp-action="GetRollAccess" value="Save" class="btn btn-primary" >Save</button>
                            @if (ViewBag.Message != null)
                            {
                                <div class="alert alert-success">


                                    @ViewBag.Message
                                </div>

                            }
                            </center>
            </div>
         
            
        </form>
    </div>
</div>


