@model PatientRegistrationModel

@{
    ViewData["Title"] = "View";
    Layout = "~/Views/Shared/_ContentNavbarLayout.cshtml";
}



<script>
    function showPopup(message) {
        var popup = document.getElementById("popupMessage");
        var popupText = document.getElementById("popupMessageText");
        var popupOKButton = document.getElementById("popupOKButton");

        popupText.textContent = message; // Set the message text
        popup.style.display = "block";

        // Close popup when OK button is clicked
        popupOKButton.addEventListener("click", function () {
            closePopup();
        });

        // Close popup when clicking outside of the message box
        document.addEventListener("click", function (event) {
            if (!popup.contains(event.target) && !popupOKButton.contains(event.target)) {
                closePopup();
            }
        });
    }

    function closePopup() {
        var popup = document.getElementById("popupMessage");
        popup.style.display = "none"; // Hide the popup
    }

    function handleMessages(message) {
        showPopup(message);
    }
</script>

<div id="popupMessage" class="dividerblack popborder" style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: #f0f0f0; color: #8c62c9; padding: 30px; border-radius: 10px; z-index: 1000; display: none; text-align: center;">
    <span id="popupMessageText" style="display: block; margin-bottom: 10px;"></span>
    <button id="popupOKButton" style="padding: 10px 20px; color: #8c62c9; border: none; border-radius: 5px; cursor: pointer;">OK</button>
</div>

<style>
    .popborder {
        border: 10px solid #8c62c9;
    }
</style>
<form asp-controller="PatientRegistration" method="post" >
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>


    <div id="patientFormFields"></div>
    <div class="row" style="margin-top:70px">
        <div class="col-md-12 col-lg-2 ">
        </div>

        <div class="col-md-12 col-lg-8 ">
            <div class="card">
                <div class="card-body " style="background-color:#8c62c9">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <div class="container">
                            <h2 class="centered text-white" style="font-family:'Lucida Bright'">Patient Registration</h2>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <br />




    <div class="row">
        <div class="col-md-12 col-lg-2">
        </div>
        <div class="col-md-12 col-lg-8">
            <div class="card">
                <div class="card-body " style="background-image: linear-gradient(to right, #FFFFFF 0%, #FFFFFF 51%, #ece5f6 100%);">


                    <div class="form-floating form-floating-outline mb-4">
                        <input asp-for="PatientID" class="form-control" value="@Model.PatientID" placeholder="PatientID"  />
                        <label asp-for="PatientID" class="control-label"></label>
                      
                    </div>




                    <div class="form-floating form-floating-outline mb-4">
                        @{
                            var Facid = ((IEnumerable<ClinicAdminModel>)ViewData["Facid"])
                            .Select(m => new SelectListItem
            {
                Value = m.FacilityID.ToString(), // Assuming ScreenId is of type int
                Text = $"{m.ClinicName}"
            });
                        }

                        @Html.DropDownListFor(model => model.FacilityID, Facid, "Select Facility ID", new { @class = "form-control", @required = "required"})
                        <label asp-for="FacilityID" class="control-label"></label>
                        <span asp-validation-for="FacilityID" class="text-danger"></span>
                    </div>

                    <div>
                        <center>
                            <button type="submit" value="GetPatient" asp-action="GetPatient" name="buttonType" formmethod="get" class="btn btn-primary">Get</button>
                        </center>
                    </div>


                </div>
            </div>
        </div>
        <div class="col-md-12 col-lg-2">
        </div>
    </div>
    <br />


    <div class="row gy-4">
        <div class="form-floating form-floating-outline mb-4">
        </div>
    </div>
    <div class="row gy-4">
        <div class="col-md-12 col-lg-1">
            </div>
        <div class="col-md-12 col-lg-3">
            <div class="card">
                <div class="card-body " style="background-image: linear-gradient(to right, #FFFFFF 0%, #FFFFFF 51%, #ece5f6 100%);">

                    <div class="form-floating form-floating-outline mb-4">
                        <input asp-for="FirstName" class="form-control" type="text" oninput="validateInput(this)" value="@Model.FirstName" placeholder="First Name" />
                        <label asp-for="FirstName" class="control-label">First Name</label>

                        <span asp-validation-for="FirstName" class="text-danger"></span>
                    </div>
                    <div class="form-floating form-floating-outline mb-4">
                        <input asp-for="MidName" class="form-control" type="text" oninput="validateInput(this)" value="@Model.MidName" placeholder="Mid Name" />
                        <label asp-for="MidName" class="control-label">Mid Name</label>

                        <span asp-validation-for="MidName" class="text-danger"></span>
                    </div>
                    <div class="form-floating form-floating-outline mb-4">
                        <input asp-for="LastName" class="form-control" type="text" oninput="validateInput(this)" value="@Model.LastName" placeholder="Last Name" />
                        <label asp-for="LastName" class="control-label">Last Name</label>

                        <span asp-validation-for="LastName" class="text-danger"></span>
                    </div>
                    <div class="form-floating form-floating-outline mb-4">
                        <input asp-for="FullName" class="form-control" type="text" oninput="validateInput(this)" value="@Model.FullName" id="FullName" placeholder="Full Name" pattern="^[A-Za-z\s]+$" title="Only letters and spaces are allowed." />
                        <label asp-for="FullName" class="control-label">Full Name</label>

                        <span id="nameerror" class="text-danger"></span>
                    </div>
                    <div class="form-floating form-floating-outline mb-4">
                        <input asp-for="Initial" class="form-control" type="text" oninput="validateInput(this)" value="@Model.Initial" placeholder="Initial" />
                        <label asp-for="Initial" class="control-label"></label>

                        <span asp-validation-for="Initial" class="text-danger"></span>
                    </div>
                    <div class="form-floating form-floating-outline mb-4">
                        <input asp-for="Prefix" class="form-control" type="text" oninput="validateInput(this)" value="@Model.Prefix" placeholder="Prefix" />
                        <label asp-for="Prefix" class="control-label"></label>

                        <span asp-validation-for="Prefix" class="text-danger"></span>
                    </div>
                    <div class="form-floating form-floating-outline mb-4">
                        <input asp-for="Dob" class="form-control" value="@Model.Dob" placeholder="DOB" type="date" />
                        <label asp-for="Dob" class="control-label"></label>

                        <span asp-validation-for="Dob" class="text-danger"></span>
                    </div>

                    <div class="form-floating form-floating-outline mb-4">
                        <input asp-for="Age" class="form-control" value="@Model.Age" id="age" placeholder="Age" />
                        <label asp-for="Age" class="control-label"></label>

                        <span id="ageerror" class="text-danger"></span>
                    </div>

                   
                </div>
            </div>
        </div>
        <div class="col-md-12 col-lg-4">
            <div class="card">
                <div class="card-body " style="background-image: linear-gradient(to right, #FFFFFF 0%, #FFFFFF 51%, #ece5f6 100%);">
                    <div class="form-floating form-floating-outline mb-4">
                        <input asp-for="PhoneNumber"  class="form-control" id="PhoneNumber" type="text" value="@Model.PhoneNumber" placeholder="Phone Number" pattern="^\d{10}$" title="Please enter exactly 10 digits." />
                        <label asp-for="PhoneNumber" class="control-label">Phone Number</label>
                        <span id="phnerror" class="text-danger"></span>
                    </div>


                    <div class="form-floating form-floating-outline mb-4">
                        @{
                            var bldgrpid = ((IEnumerable<BloodGroupModel>)ViewData["bldgrpid"])
                            .Select(m => new SelectListItem
            {
                Value = m.BloodGroup.ToString(), // Assuming ScreenId is of type int
                Text = $"{m.BloodGroup}"
            });
                        }

                        @Html.DropDownListFor(model => model.BloodGroup, bldgrpid, "Select Blood Group", new { @class = "form-control"})
                        <label asp-for="BloodGroup" class="control-label"></label>
                        <span id="blderror" class="text-danger"></span>
                    </div>


                    <div class="form-group">
                        <label class="control-label">Gender:</label><br />
                        <div class="form-check form-check-inline">
                            <input asp-for="Gender" class="form-check-input" type="radio" value="Male" id="maleRadio" />
                            <label class="form-check-label" for="maleRadio">Male</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input asp-for="Gender" class="form-check-input" type="radio" value="Female" id="femaleRadio"/>
                            <label class="form-check-label" for="femaleRadio">Female</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input asp-for="Gender" class="form-check-input" type="radio" value="Other" id="otherRadio"/>
                            <label class="form-check-label" for="otherRadio">Other</label>
                        </div>
                        <span id="gendererror" class="text-danger"></span>
                    </div>



                    <div class="form-group">
                        <label asp-for="MaritalStatus" class="control-label">Marital Status:</label>
                        <select asp-for="MaritalStatus" class="form-control">
                            <option value="">Select Marital Status</option>
                            <option value="Single">Single</option>
                            <option value="Married">Married</option>
                        </select>
                        <span asp-validation-for="MaritalStatus" class="text-danger"></span>
                    </div>

                    <br />

                    <div class="input-group input-group-merge speech-to-text form-floating form-floating-outline mb-4">
                        <textarea asp-for="Address1" class="form-control" placeholder="Address1" aria-describedby="text-to-speech-addon"></textarea>
                        <label asp-for="Address1" class="control-label"></label>
                        <span class="input-group-text" id="text-to-speech-addon">
                            <i class="mdi mdi-microphone-outline cursor-pointer text-to-speech-toggle"></i>
                        </span>
                        <span asp-validation-for="Address1" class="text-danger"></span>
                    </div>

                    <div class="input-group input-group-merge speech-to-text form-floating form-floating-outline mb-4">
                        <textarea asp-for="Address2" class="form-control" placeholder="Address2" aria-describedby="text-to-speech-addon"></textarea>
                        <label asp-for="Address2" class="control-label"></label>
                        <span class="input-group-text" id="text-to-speech-addon">
                            <i class="mdi mdi-microphone-outline cursor-pointer text-to-speech-toggle"></i>
                        </span>
                        <span asp-validation-for="Address2" class="text-danger"></span>



                    </div>

                    <div class="form-floating form-floating-outline mb-4">
                        <input asp-for="Country" class="form-control" value="@Model.Country" placeholder="Country" />
                        <label asp-for="Country" class="control-label"></label>

                        <span asp-validation-for="Country" class="text-danger"></span>
                    </div>
                    <div class="form-floating form-floating-outline mb-4">
                        <input asp-for="City" class="form-control" value="@Model.City" placeholder="City" />
                        <label asp-for="City" class="control-label"></label>

                        <span asp-validation-for="City" class="text-danger"></span>
                    </div>
                   
                </div>
            </div>
        </div>
        <div class="col-md-12 col-lg-3">
            <div class="card">
                <div class="card-body " style="background-image: linear-gradient(to right, #FFFFFF 0%, #FFFFFF 51%, #ece5f6 100%);">


                    <div class="form-floating form-floating-outline mb-4">
                        <input asp-for="State" class="form-control" value="@Model.State" placeholder="State" />
                        <label asp-for="State" class="control-label"></label>

                        <span asp-validation-for="State" class="text-danger"></span>
                    </div>

                    <div class="form-floating form-floating-outline mb-4">
                        <input asp-for="Pin" class="form-control" type="text" id="Pin" pattern="\d{6}" title="Please enter exactly 6 digits" value="@Model.Pin" placeholder="Pin Number" />
                        <label asp-for="Pin" class="control-label">Pin Number</label>

                        <span asp-validation-for="Pin" class="text-danger"></span>
                    </div>
                    <div class="form-floating form-floating-outline mb-4">
                        <input asp-for="IDPrfName" class="form-control" value="@Model.IDPrfName" oninput="validateInput(this)" placeholder="IDProof Name" />
                        <label asp-for="IDPrfName" class="control-label">IDProof Name</label>
                        <span asp-validation-for="IDPrfName" class="text-danger"></span>
                    </div>
                    <div class="form-floating form-floating-outline mb-4">
                        <input asp-for="IDPrfNumber" class="form-control" value="@Model.IDPrfNumber" placeholder="IDProof Number" />
                        <label asp-for="IDPrfNumber" class="control-label">IDProof Number</label>

                        <span asp-validation-for="IDPrfNumber" class="text-danger"></span>
                    </div>
                    <div class="form-floating form-floating-outline mb-4">
                        <input asp-for="CnctPrsnName" class="form-control" value="@Model.CnctPrsnName" oninput="validateInput(this)" placeholder="Contact Person Name" />
                        <label asp-for="CnctPrsnName" class="control-label">Contact Person Name</label>

                        <span asp-validation-for="CnctPrsnName" class="text-danger"></span>
                    </div>
                    <div class="form-floating form-floating-outline mb-4">
                        <input asp-for="Rlnpatient" class="form-control" value="@Model.Rlnpatient" oninput="validateInput(this)"  placeholder="Patient Relation" />
                        <label asp-for="Rlnpatient" class="control-label">Patient Relation</label>

                        <span asp-validation-for="Rlnpatient" class="text-danger"></span>
                    </div>
                    <div class="form-floating form-floating-outline mb-4">
                        <input asp-for="EmgcyCntNum" class="form-control" type="text" id="PhoneNumber1" value="@Model.EmgcyCntNum" pattern="\d{10}" maxlength="10" placeholder="Emergency Contact Number" />
                        <label asp-for="EmgcyCntNum" class="control-label">Emergency Contact Number</label>

                        <span asp-validation-for="EmgcyCntNum" class="text-danger"></span>
                    </div>

                    <div class="row gy-4">
                        <div class="form-floating form-floating-outline mb-4">
                        </div>
                    </div>
                  

                </div>

            </div>


            <div class="form-floating form-floating-outline mb-4">
                <center>
                    <button type="submit" value="Save" asp-action="CreateOrUpdate" onclick="validateForm(event)" class="btn btn-primary">Save</button>


                    <button type="submit" value="Delete" asp-action="CreateOrUpdate" name="buttonType" class="btn btn-primary">Delete</button>

                </center>
            </div>


        </div>
        @if (ViewBag.Message != null)
        {
            <script>
                handleMessages("@ViewBag.Message");
            </script>
        }

</form>



<script>
    function validateInput(input) {
        // Store the cursor position
        const cursorPos = input.selectionStart;

        // Replace invalid characters
        input.value = input.value.replace(/[^A-Za-z\s]/g, '');

        // Restore cursor position
        input.setSelectionRange(cursorPos, cursorPos);
    }
</script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const phoneInput = document.getElementById('PhoneNumber');

        phoneInput.addEventListener('input', function (e) {
            // Remove non-numeric characters
            this.value = this.value.replace(/\D/g, '');
        });

        phoneInput.addEventListener('keydown', function (e) {
            // Allow backspace, delete, tab, escape, enter, and arrow keys
            if ([46, 8, 9, 27, 13, 37, 38, 39, 40].indexOf(e.keyCode) !== -1) {
                return;
            }
            // Prevent typing if the input already has 10 characters
            if (this.value.length >= 10) {
                e.preventDefault();
            }
        });
    });
</script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const phoneInput = document.getElementById('PhoneNumber1');

        phoneInput.addEventListener('input', function (e) {
            // Remove non-numeric characters
            this.value = this.value.replace(/\D/g, '');
        });

        phoneInput.addEventListener('keydown', function (e) {
            // Allow backspace, delete, tab, escape, enter, and arrow keys
            if ([46, 8, 9, 27, 13, 37, 38, 39, 40].indexOf(e.keyCode) !== -1) {
                return;
            }
            // Prevent typing if the input already has 10 characters
            if (this.value.length >= 10) {
                e.preventDefault();
            }
        });
    });
</script>



<script>
    document.addEventListener('DOMContentLoaded', function () {
        const pincodeInput = document.getElementById('Pin');

        pincodeInput.addEventListener('input', function (e) {
            // Remove non-numeric characters
            this.value = this.value.replace(/\D/g, '');
        });

        pincodeInput.addEventListener('keydown', function (e) {
            // Allow backspace, delete, tab, escape, enter, and arrow keys
            if ([46, 8, 9, 27, 13, 37, 38, 39, 40].indexOf(e.keyCode) !== -1) {
                return;
            }
            // Prevent typing if the input already has 6 characters
            if (this.value.length >= 6) {
                e.preventDefault();
            }
        });
    });
</script>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        const agecodeInput = document.getElementById('age');

        agecodeInput.addEventListener('input', function (e) {
            // Remove non-numeric characters
            this.value = this.value.replace(/\D/g, '');
        });

        agecodeInput.addEventListener('keydown', function (e) {
            // Allow backspace, delete, tab, escape, enter, and arrow keys
            if ([46, 8, 9, 27, 13, 37, 38, 39, 40].indexOf(e.keyCode) !== -1) {
                return;
            }
            // Prevent typing if the input already has 6 characters
            if (this.value.length >= 3) {
                e.preventDefault();
            }
        });
    });
</script>


<script>
    function validateForm(event) {
        // Get field values
        
        var phoneNumber = document.getElementById("PhoneNumber").value;
        var errorSpanPhoneNumber = document.getElementById("phnerror");

        var age = document.getElementById("age").value;
        var errorSpanAge = document.getElementById("ageerror");

        var fullName = document.getElementById("FullName").value;
        var errorSpanFullName = document.getElementById("nameerror");

      
        var gender = document.querySelector('input[name="Gender"]:checked');
        var errorSpanGender = document.getElementById("gendererror");

        // Clear previous error messages
        errorSpanBloodGroup.textContent = '';
        errorSpanPhoneNumber.textContent = '';
        errorSpanAge.textContent = '';
        errorSpanFullName.textContent = '';
        errorSpanGender.textContent = '';

        let isValid = true; // Track if the form is valid

        // Check if the Blood Group is selected
        if (!bloodGroup) {
            errorSpanBloodGroup.textContent = "Please select a Blood Group.";
            isValid = false; // Mark as invalid
        }

       
        if (!phoneNumber) {
            errorSpanPhoneNumber.textContent = "Phone enter a Phone Number";
            isValid = false;
        }

        if (isNaN(age) || age <= 0) {
            errorSpanAge.textContent = "Please enter a valid age.";
            isValid = false; 
        }

        
        if (!fullName) {
            errorSpanFullName.textContent = "Please enter a FullName";
            isValid = false; 
        }

      
        if (!gender) {
            errorSpanGender.textContent = "Please select a Gender.";
            isValid = false; 
        }

        // Prevent form submission if there are errors
        if (!isValid) {
            event.preventDefault();
        }
    }
</script>
