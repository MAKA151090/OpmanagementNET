@model HealthCare.Models.InpatientDischargeModel

@{
    ViewData["Title"] = "InPatientDischarge";
    Layout = "~/Views/Shared/_ContentNavbarLayout.cshtml";
}

<div class="card xl-8">
    <div class="card-body pt-2 mt-1">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h2 class="text-primary mb-1">Patient Discharge</h2>
            <small class="text-muted float-end"></small>

        </div>
    </div>
        <form asp-action="GetPatientDischarge">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="row gy-4">

            <div class="col-md-12 col-lg-1"></div>
            <div class="col-md-12 col-lg-4">
                <div class="card">
                    <div class="card-body">



                        <div class="form-floating form-floating-outline mb-4">
                            @{
                                var patientid = ((IEnumerable<PatientRegistrationModel>)ViewData["patientID"])
                                .Select(m => new SelectListItem
            {
                Value = m.PatientID.ToString(), // Assuming ScreenId is of type int
                Text = $"{m.PatientID} - {m.FullName}"
            });
                            }

                            @Html.DropDownListFor(model => model.PatientID, patientid, "Select Patient ID", new { @class = "form-control", required = "required" })
                            <label asp-for="PatientID" class="control-label">PatientID</label>
                            <span asp-validation-for="PatientID" class="text-danger"></span>
                        </div>


                        <div class="form-floating form-floating-outline mb-4">
                            @{
                                var CaseID = ((IEnumerable<InpatientAdmissionModel>)ViewData["CaseID"])
                                .Select(m => new SelectListItem
            {
                Value = m.CaseID.ToString(), // Assuming ScreenId is of type int
                Text = $"{m.CaseID}"
            });
                            }

                            @Html.DropDownListFor(model => model.CaseID, CaseID, "Select Case ID", new { @class = "form-control", required = "required" })
                            <label asp-for="CaseID" class="control-label">CaseID</label>
                            <span asp-validation-for="CaseID" class="text-danger"></span>
                        </div>
                   

                        <div class="input-group input-group-merge speech-to-text form-floating form-floating-outline mb-4">
                            <textarea asp-for="DischargeNotes" class="form-control" placeholder="Discharge Notes" aria-describedby="text-to-speech-addon" required></textarea>
                            <label asp-for="DischargeNotes" class="control-label">Discharge Notes</label>
                            <span class="input-group-text" id="text-to-speech-addon">
                                <i class="mdi mdi-microphone-outline cursor-pointer text-to-speech-toggle"></i>
                            </span>
               
                <span asp-validation-for="DischargeNotes" class="text-danger"></span>
            </div>


                        <div class="form-floating form-floating-outline mb-4">
                            @{
                                var DoctorID = ((IEnumerable<ResourceTypeMasterModel>)ViewData["DoctorID"])
                                .Select(m => new SelectListItem
            {
                Value = m.ResourceTypeID.ToString(), // Assuming ScreenId is of type int
                Text = $"{m.ResourceTypeID} - {m.ResourceTypeName}"
            });
                            }

                            @Html.DropDownListFor(model => model.DoctorID, DoctorID, "Select Doctor ID", new { @class = "form-control", required = "required" })
                            <label asp-for="DoctorID" class="control-label">CaseID</label>
                            <span asp-validation-for="DoctorID" class="text-danger"></span>
                        </div>


@*             <div class="form-group">
                <label asp-for="lastUpdatedDate" class="control-label"></label>
                <input asp-for="lastUpdatedDate" class="form-control" />
                <span asp-validation-for="lastUpdatedDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="lastUpdatedUser" class="control-label"></label>
                <input asp-for="lastUpdatedUser" class="form-control" />
                <span asp-validation-for="lastUpdatedUser" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="lastUpdatedMachine" class="control-label"></label>
                <input asp-for="lastUpdatedMachine" class="form-control" />
                <span asp-validation-for="lastUpdatedMachine" class="text-danger"></span>
            </div> *@

            <div class="form-group">
                <center>
                <button type="submit" asp-action="GetPatientDischarge" value="Create" class="btn btn-primary" >Save</button>
                            @if (ViewBag.Message != null)
                            {
                                <div class="alert alert-success">


                                    @ViewBag.Message
                                </div>
                            }
                            </center>
            </div>

        </form>
    </div>
</div>

