@model InpatientObservationViewModel

@{
    ViewData["Title"] = "InPatientObservation";
    Layout = "~/Views/Shared/_ContentNavbarLayout.cshtml";
}




@using (Html.BeginForm("GetInpatientViewResult", "InPatientModules", FormMethod.Post))
{

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
<div class="row" style="margin-top:70px">
    <div class="col-md-12 col-lg-2 ">
    </div>

    <div class="col-md-12 col-lg-8 ">
        <div class="card">
            <div class="card-body " style="background-color:#8c62c9">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <div class="container">
                        <h2 class="centered text-white" style="font-family:'Lucida Bright'">In-Patient Observation</h2>

                    </div>
                </div>
            </div>
        </div>
        </div>
    </div>

    <br/>
        <div class="row" style="height:3%">
        </div>

        <div class="row">
        <div class="col-md-12 col-lg-2 ">
        </div>
            <div class="col-md-12 col-lg-8">
                <div class="card">
                    <div class="card-body " style="background-image: linear-gradient(to right, #FFFFFF 0%, #FFFFFF 51%, #ece5f6 100%);">

                        <div class="form-floating form-floating-outline mb-4">
                            @{
                                var bedid = ((IEnumerable<HospitalBedMasterModel>)ViewData["bedid"])
                                .Select(m => new SelectListItem
                {
                    Value = m.BedID.ToString(), // Assuming ScreenId is of type int
                    Text = $"{m.BedID} - {m.BedName}"
                });
                            }

                            <input type="text" id="bedDropdownInput" class="form-control" placeholder="Select Bed ID" onkeyup="filterDropdown(event, 'bedDropdownInput', 'bedDropdown')" onclick="showDropdown('bedDropdown')">
                            <ul id="bedDropdown" class="list-group mt-2" style="display: none; position: absolute; z-index: 1000; width: 100%; max-height: 200px; overflow-y: auto; background-color: white; list-style-type: none; padding: 0;">
                                @foreach (var item in bedid)
                                {
                                    <li class="list-group-item" data-value="@item.Value" onclick="selectDropdownItem('bedDropdownInput', 'bedNoID', '@item.Text', '@item.Value')" style="background-color: white; border: none;">@item.Text</li>
                                }
                            </ul>
                            <input type="hidden" name="BedNoID" id="bedNoID" value="BedNoID" />


                          @*   @Html.DropDownListFor(model => model.BedNoID, bedid, "Select Bed ID", new { @class = "form-control", @required = "required" }) *@
                            <label asp-for="BedNoID" class="control-label"></label> 
                            <span asp-validation-for="BedNoID" class="text-danger"></span>
                        </div>


                        <div class="form-floating form-floating-outline mb-4">
                            @{
                                var PatientID = ((IEnumerable<PatientRegistrationModel>)ViewData["patientID"])
                                .Select(m => new SelectListItem
                {
                    Value = m.PatientID.ToString(), // Assuming ScreenId is of type int
                    Text = $"{m.PatientID} - {m.FullName}"
                });
                            }


                            <input type="text" id="patientDropdownInput" class="form-control" placeholder="Select Patient ID" onkeyup="filterDropdown(event, 'patientDropdownInput', 'patientDropdown')" onclick="showDropdown('patientDropdown')" >
                            <ul id="patientDropdown"  class="list-group mt-2" style="display: none; position: absolute; z-index: 1000; width: 100%; max-height: 200px; overflow-y: auto; background-color: white; list-style-type: none; padding: 0;">
                                @foreach (var item in PatientID)
                                {
                                    <li class="list-group-item"  data-value="@item.Value" onclick="selectDropdownItem('patientDropdownInput', 'patientID', '@item.Text', '@item.Value')" style="background-color: white; border: none;">@item.Text</li>
                                }
                            </ul>
                            <input type="hidden" name="PatientID" id="patientID" value="PatientID" />

                           @*   @Html.DropDownListFor(model => model.PatientID, PatientID, "Select Patient ID", new { @class = "form-control", @required = "required" }) *@
                            <label asp-for="PatientID" class="control-label"></label> 
                            <span asp-validation-for="PatientID" class="text-danger"></span>
                        </div>


                    <div class="form-floating form-floating-outline mb-4">

                        <input asp-for="ObservationID" class="form-control" placeholder="Observation ID" required />
                        <label asp-for="ObservationID" class="control-label">Observation ID</label>
                        <span asp-validation-for="ObservationID" class="text-danger"></span>
                    </div>


                        </div>
                        </div>

                    </div>
                </div>
           

            <br />
            <div class="form-group">
                <center>

            <button type="submit" style="width:180px" name="buttonType" value="get" class="btn btn-primary">get</button>

                   
                </center>
            </div>

     

    <br />
         <div class="row">
        <div class="col-md-12 col-lg-2">
            </div>
            <div class="col-md-12 col-lg-8">
                <div class="card">
                    <div class="card-body" style="background-image: linear-gradient(to right, #FFFFFF 0%, #FFFFFF 51%, #ece5f6 100%);">

    <table class="table">
        <thead>
            <tr>

                <th>
                    Observation Name
                </th>
                <th>
                    Answer
                </th>
                @* <th>
                    Unit
                </th>
                <th>
                    Range
                </th>
                <th>
                    Frequency
                </th> *@
            </tr>
        </thead>
        <tbody>

               
            @if (Model != null)
            {
                @for (int i = 0; i < Model.SHviewInpatientObs.Count; i++)
                {
                    <tr>
                                        <td><input type="text" class="form-control" rows="3" asp-for="@Model.SHviewInpatientObs[i].ObservationName" readonly /> <input type="hidden" asp-for="@Model.SHviewInpatientObs[i].ObservationTypeID" /></td>

                                        <td><input type="text" class="form-control" rows="3" asp-for="@Model.SHviewInpatientObs[i].Answer" /></td>

                        @* <td><input type="text" asp-for="@Model.SHviewInpatientObs[i].Unit" readonly/></td>
                        <td><input type="text" asp-for="@Model.SHviewInpatientObs[i].Frequency" readonly /></td>
                        <td><input type="text" asp-for="@Model.SHviewInpatientObs[i].Range" readonly/></td> *@
                        @*  <td>@Model.SHviewInpatientObs[i].Unit</td>
            <td>@Model.SHviewInpatientObs[i].Range</td>
            <td>@Model.SHviewInpatientObs[i].Frequency</td> *@
                    </tr>
                }
            }
        </tbody>
    </table>
                </div>
            </div>
        </div>
    </div>
    @if (Model != null)
    {
        @if (Model.SHviewInpatientObs.Count != 0)
        {
            <br />
            <div class="row">
                <div class="col-md-12 col-lg-2">
                </div>
                <div class="col-md-12 col-lg-8">
                    <div class="card">
                        <div class="card-body" style="background-image: linear-gradient(to right, #FFFFFF 0%, #FFFFFF 51%, #ece5f6 100%);">

            <div class="form-group">
                <label asp-for="DateTime" class="control-label"></label>
                <input asp-for="DateTime" class="form-control" type="datetime-local"  />
                <span asp-validation-for="DateTime" class="text-danger"></span>
            </div> 
                                <div class="form-floating form-floating-outline mb-4">
                                    <input asp-for="NurseID" class="form-control" placeholder="Nurse ID"/>

                <label asp-for="NurseID" class="control-label"></label>
                <span asp-validation-for="NurseID" class="text-danger"></span>
            </div>
           

            <div class="form-group">
                <center>
                    <button type="submit" name="buttonType" value="save" class="btn btn-primary">save</button>
                    @if (ViewBag.Message != null)
                    {
                        <div class="alert alert-success">


                            @ViewBag.Message
                        </div>
                    }
                </center>
            </div>
            </div>
            </div>
            </div>
            </div>
            

        }
    }
    }



    <script>

        var selectedBedNoID = null;
        var selectedPatientID = null;

        function setSelectedIDs(bedNoID, patientID) {
            selectedBedNoID = bedNoID;
            selectedPatientID = patientID;
        }

        function filterDropdown(event, inputId, dropdownId) {
            var input = document.getElementById(inputId);
            var filter = input.value.toUpperCase();
            var dropdown = document.getElementById(dropdownId);
            var items = dropdown.getElementsByTagName("li");

            for (var i = 0; i < items.length; i++) {
                items[i].classList.remove("active");
                var txtValue = items[i].textContent || items[i].innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    items[i].style.display = "";
                } else {
                    items[i].style.display = "none";
                }
            }

            dropdown.style.display = input.value === "" ? "none" : "block";
        }

        function showDropdown(dropdownId) {
            document.getElementById(dropdownId).style.display = "block";
        }

        document.addEventListener("click", function (event) {
            if (!event.target.matches('.form-control')) {
                document.getElementById("bedDropdown").style.display = "none";
                document.getElementById("patientDropdown").style.display = "none";
            }
        });

        function selectDropdownItem(inputId, hiddenInputId, text, value) {
            
            document.getElementById(inputId).value = text;
            document.getElementById(hiddenInputId).value = value;
            document.getElementById(inputId).dispatchEvent(new Event('input')); // Trigger validation
            document.getElementById("patientDropdown").style.display = "none";

        }
    </script>
