@model EmployeePayMaster

@{
    ViewData["Title"] = "EmployeePayMaster";
    Layout = "~/Views/Shared/_ContentNavbarLayout.cshtml";
}

<script>
    function showPopup(message) {
        var popup = document.getElementById("popupMessage");
        var popupText = document.getElementById("popupMessageText");
        var popupOKButton = document.getElementById("popupOKButton");

        popupText.textContent = message; // Set the message text
        popup.style.display = "block";

        // Close popup when OK button is clicked
        popupOKButton.addEventListener("click", function () {
            closePopup();
        });

        // Close popup when clicking outside of the message box
        document.addEventListener("click", function (event) {
            if (!popup.contains(event.target) && !popupOKButton.contains(event.target)) {
                closePopup();
            }
        });
    }

    function closePopup() {
        var popup = document.getElementById("popupMessage");
        popup.style.display = "none"; // Hide the popup
    }

    function handleMessages(message) {
        showPopup(message);
    }
</script>

<div id="popupMessage" class="dividerblack popborder" style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: #f0f0f0; color: #8c62c9; padding: 30px; border-radius: 10px; z-index: 1000; display: none; text-align: center;">
    <span id="popupMessageText" style="display: block; margin-bottom: 10px;"></span>
    <button id="popupOKButton" style="padding: 10px 20px; color: #8c62c9; border: none; border-radius: 5px; cursor: pointer;">OK</button>
</div>

<style>
    .popborder {
        border: 10px solid #8c62c9;
    }
</style>



<div class="row gy-4">
    <div class="col-md-12 col-lg-2">
    </div>
    <div class="col-md-12 col-lg-8">
        <div class="card">
            <div class="card-body " style="background-color:#8c62c9">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <div class="container">
                        <h2 class="centered text-white" style="font-family:'Lucida Bright'">Employee Pay  Master</h2>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row gy-4" style="height:8%">
</div>



<form asp-action="Addemployeepaymaster" asp-controller="HRManagement">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="row gy-4">

        <div class="col-md-12 col-lg-2">
        </div>
        <div class="col-md-12 col-lg-8">
            <div class="card">

                <div class="card-body " style="background-image: linear-gradient(to right, #FFFFFF 0%, #FFFFFF 51%, #ece5f6 100%);">

                   @*  <div class="form-floating form-floating-outline mb-4">

                        <input asp-for="Staffpayid" class="form-control" placeholder="Staff Pay ID" />
                        <label asp-for="Staffpayid" class="control-label">Staff Pay ID</label>
                       
                    </div> *@


                    <div class="form-floating form-floating-outline mb-4">
                        @{
                            var screenlist = ((IEnumerable<StaffAdminModel>)ViewData["alldocid"])
                            .Select(m => new SelectListItem
            {
                Value = m.StrStaffID.ToString(), // Assuming ScreenId is of type int
                Text = $"{m.StrFullName}"
            });
                        }

                        @Html.DropDownListFor(model => model.Staffname, screenlist, "Select Staff Name", new { @class = "form-control", @required = "required" })
                        <label asp-for="Staffname" class="control-label">Staff ID</label>

                    </div>

                 @*    <div class="form-floating form-floating-outline mb-4">
                        @{
                            var payheadlist = ((IEnumerable<PayHeadMaster>)ViewData["getpayhead"])
                            .Select(m => new SelectListItem
            {
                Value = m.PayheadName.ToString(), // Assuming ScreenId is of type int
                Text = $"{m.PayheadName}"
            });
                        }

                        @Html.DropDownListFor(model => model.Payhead, payheadlist, "Select Pay Head Name", new { @class = "form-control"})
                        <label asp-for="Payhead" class="control-label">Pay Head</label>

                    </div>
 *@
                    <div id="paymasterNamesSection" class="form-floating form-floating-outline mb-4">
                        <div id="paymasterNamesCheckboxes">
                            <label>Select Pay Head</label>

                            @foreach (var rollOption in (IEnumerable<PayHeadMaster>)ViewData["getpayhead"])
                            {
                                // Check if the current Payhead is in the list of selected Payheads
                                var isChecked = ((IEnumerable<string>)ViewData["SelectedPayheads"] ?? Enumerable.Empty<string>())
                                .Contains(rollOption.PayheadName) ? "checked" : "";

                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="paymasterNames_@rollOption.PayheadName"
                                           name="SelectedRollNames" value="@rollOption.PayheadName" @isChecked>
                                    <label class="form-check-label" for="paymasterNames_@rollOption.PayheadName">
                                        @rollOption.PayheadName
                                    </label>
                                </div>
                            }
                        </div>

                        <span id="rollNamesError" class="text-danger"></span>
                    </div>



                
                   

                </div>
            </div>
        </div>
    </div>
    <br />

    <div class="form-group">
        <center>
          
            <button type="submit" value="Save" class="btn btn-primary" onclick="validateRollNames(event)">Save</button>
            <button type="submit" value="Delete" name="buttonType" class="btn btn-primary" onclick="validateRollNames(event)">Delete</button>
            <button type="submit" value="Get" name="buttonType" class="btn btn-primary">Get</button>
            @if (ViewBag.Message != null)
            {
                <script>
                    handleMessages("@ViewBag.Message");
                </script>
            }
        </center>
    </div>

</form>

<script>
    function validateRollNames(event) {
        // Get all the checkboxes inside the rollNamesCheckboxes div
        var checkboxes = document.querySelectorAll('#paymasterNamesCheckboxes input[type="checkbox"]');
        var isChecked = false;
        var errorSpan = document.getElementById("rollNamesError");

        // Clear the previous error message
        errorSpan.textContent = '';

        // Check if at least one checkbox is selected
        checkboxes.forEach(function (checkbox) {
            if (checkbox.checked) {
                isChecked = true;
            }
        });

        if (!isChecked) {
            // If no checkbox is selected, display an error message and prevent form submission
            errorSpan.textContent = "Please select at least one Payhead.";
            event.preventDefault(); // Prevent form submission
        }
    }
</script>
