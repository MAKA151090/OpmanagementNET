// <auto-generated />
using System;
using HealthCare.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HealthCare.Migrations
{
    [DbContext(typeof(HealthcareContext))]
    [Migration("20240608082809_Intial46")]
    partial class Intial46
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BloodGroupModel", b =>
                {
                    b.Property<string>("IntBg_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BloodGroup")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntBg_Id", "BloodGroup");

                    b.ToTable("SHclnBloodGroup");
                });

            modelBuilder.Entity("ClinicAdminModel", b =>
                {
                    b.Property<string>("FacilityID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClinicAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClinicEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClinicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClinicPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromHour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToHour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FacilityID");

                    b.ToTable("SHclnClinicAdmin");
                });

            modelBuilder.Entity("DoctorScheduleModel", b =>
                {
                    b.Property<string>("StaffID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FacilityID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SlotsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Viewslot")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Blocker")
                        .HasColumnType("bit");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Holiday")
                        .HasColumnType("bit");

                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StrInActive")
                        .HasColumnType("bit");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffID", "FacilityID", "SlotsID", "Viewslot");

                    b.HasIndex("StaffID", "FacilityID", "Viewslot");

                    b.ToTable("SHclnResourceSchedule");
                });

            modelBuilder.Entity("HealthCare.Business.PatientInfoDocumentModel", b =>
                {
                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FacilityID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VisitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StrlastUpdatedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrlastUpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientID", "FacilityID", "VisitID");

                    b.ToTable("SHExmInfoDocument");
                });

            modelBuilder.Entity("HealthCare.Models.ClinicSurgeryMasterModel", b =>
                {
                    b.Property<string>("SurgeryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Cost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurgeryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastupdatedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SurgeryID");

                    b.ToTable("SHclnSurgeryMaster");
                });

            modelBuilder.Entity("HealthCare.Models.DiagnosisMasterModel", b =>
                {
                    b.Property<string>("DiagnosisID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiagnosisCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiagnosisDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiagnosisName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiagnosisStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ICDCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherCodeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WHODescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DiagnosisID");

                    b.ToTable("SHclnDiagnosisMaster");
                });

            modelBuilder.Entity("HealthCare.Models.DrugCategoryModel", b =>
                {
                    b.Property<string>("CategoryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedmachine")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("SHstkDrugCategory");
                });

            modelBuilder.Entity("HealthCare.Models.DrugGroupModel", b =>
                {
                    b.Property<string>("GroupTypeName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GroupTypeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedmachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupTypeName", "GroupTypeID");

                    b.ToTable("SHstkDrugGroup");
                });

            modelBuilder.Entity("HealthCare.Models.DrugInventoryModel", b =>
                {
                    b.Property<string>("DrugId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dosage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastupdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastupdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RockId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SideEffects")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Therapy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DrugId");

                    b.ToTable("SHstkDrugInventory");
                });

            modelBuilder.Entity("HealthCare.Models.DrugRackModel", b =>
                {
                    b.Property<string>("RackID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RackName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedmachine")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RackID", "RackName");

                    b.ToTable("SHstkDrugRack");
                });

            modelBuilder.Entity("HealthCare.Models.DrugStockModel", b =>
                {
                    b.Property<string>("IDNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DrugID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ExpiryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturingDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfStock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RackID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDNumber", "DrugID");

                    b.ToTable("SHstkDrugStock");
                });

            modelBuilder.Entity("HealthCare.Models.DrugTypeModel", b =>
                {
                    b.Property<string>("TypeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedmachine")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeID");

                    b.ToTable("SHstkDrugType");
                });

            modelBuilder.Entity("HealthCare.Models.EWSMasterModel", b =>
                {
                    b.Property<string>("ObservationTypeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObservationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Range")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastupdatedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ObservationTypeID");

                    b.ToTable("SHclnEWSMaster");
                });

            modelBuilder.Entity("HealthCare.Models.GenericReportsModel", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<string>("ReportDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportQuery")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReportId");

                    b.ToTable("SHRepGenericReports");
                });

            modelBuilder.Entity("HealthCare.Models.HospitalBedMasterModel", b =>
                {
                    b.Property<string>("BedID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BedType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostPerDay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NurseStationID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomFloor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastupdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BedID");

                    b.ToTable("SHclnHospitalBedMaster");
                });

            modelBuilder.Entity("HealthCare.Models.HospitalFacilityMappingModel", b =>
                {
                    b.Property<string>("HospitalID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FacilityID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FacilityStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HospitalID", "FacilityID");

                    b.ToTable("SHHospitalFacilityMapping");
                });

            modelBuilder.Entity("HealthCare.Models.HospitalRegistrationModel", b =>
                {
                    b.Property<string>("HospitalID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HospitalID");

                    b.ToTable("SHHospitalRegistration");
                });

            modelBuilder.Entity("HealthCare.Models.IPTypeMasterModel", b =>
                {
                    b.Property<string>("IPTypeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IPTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastupdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IPTypeID");

                    b.ToTable("SHclnIPTypeMaster");
                });

            modelBuilder.Entity("HealthCare.Models.InPatientCaseSheetModel", b =>
                {
                    b.Property<string>("StrPatientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StrCaseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedMachine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastupdatedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastupdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrAllergicTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrBedId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrDiagnosis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrHeight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrPostMedHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrTreatment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrWeight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StrPatientId", "StrCaseId");

                    b.ToTable("SHipmInPatientCaseSheet");
                });

            modelBuilder.Entity("HealthCare.Models.InPatientDocVisitModel", b =>
                {
                    b.Property<string>("PatientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CaseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BedId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastupdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastupdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NurseID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NurseNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientId", "CaseId");

                    b.ToTable("SHipmInPatientDocVisit");
                });

            modelBuilder.Entity("HealthCare.Models.InPatientTransferUpdateModel", b =>
                {
                    b.Property<string>("PatientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CaseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BedId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TranferID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BedIdFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BedIdTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangeDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCount")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastupdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastupdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomTypeFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomTypeTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransferNotes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientId", "CaseId", "BedId", "TranferID");

                    b.ToTable("SHipmInPatientTransferUpdate");
                });

            modelBuilder.Entity("HealthCare.Models.InpatientAdmissionModel", b =>
                {
                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CaseID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdditionConsultDoctorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdmissionDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttenderContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttenderEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttenderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BedID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsultDoctorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsultantDepartmentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocInstruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DutyDoctorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InpatientType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferredByDoctorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastupdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientID", "CaseID");

                    b.ToTable("SHInpatientAdmission");
                });

            modelBuilder.Entity("HealthCare.Models.InpatientDischargeModel", b =>
                {
                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CaseID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DischargeNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientID", "CaseID");

                    b.ToTable("SHInpatientDischarge");
                });

            modelBuilder.Entity("HealthCare.Models.InpatientObservationModel", b =>
                {
                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ObservationID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BedNoID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ObservationTypeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NurseID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObservationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Range")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastupdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientID", "ObservationID", "BedNoID", "ObservationTypeID");

                    b.ToTable("SHipmInpatientobservation");
                });

            modelBuilder.Entity("HealthCare.Models.InternalDepartmentMasterModel", b =>
                {
                    b.Property<string>("DepartmentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastupdatedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentID");

                    b.ToTable("SHotInternalDepartmentMaster");
                });

            modelBuilder.Entity("HealthCare.Models.LogsModel", b =>
                {
                    b.Property<int>("LogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogID"));

                    b.Property<int?>("Att1")
                        .HasColumnType("int");

                    b.Property<string>("LogDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogScreens")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LogID");

                    b.ToTable("SHLogs");
                });

            modelBuilder.Entity("HealthCare.Models.NurseStationMasterModel", b =>
                {
                    b.Property<string>("NurseStationID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FacilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastupdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NurseStationID");

                    b.ToTable("SHclnNurseStationMaster");
                });

            modelBuilder.Entity("HealthCare.Models.OTNotesModel", b =>
                {
                    b.Property<string>("OtScheduleID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FinalOtNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntraOtAnesthesiaNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntraOtNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObservationNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostOtAnesthesiaNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostOtNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreOtAnesthesiaNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreOtNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastupdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OtScheduleID");

                    b.ToTable("SHotNotes");
                });

            modelBuilder.Entity("HealthCare.Models.OTSchedulingModel", b =>
                {
                    b.Property<string>("OtScheduleID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdditionalNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseVisitID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Confirm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InchrgDepID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("OperationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastupdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OtScheduleID");

                    b.ToTable("SHotScheduling");
                });

            modelBuilder.Entity("HealthCare.Models.OTSummaryMasterModel", b =>
                {
                    b.Property<string>("QuestionID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionID");

                    b.ToTable("SHclnOtSummaryMaster");
                });

            modelBuilder.Entity("HealthCare.Models.OTSummaryModel", b =>
                {
                    b.Property<string>("OtscheduleID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("QuestionID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OtscheduleID", "QuestionID");

                    b.ToTable("SHOTsummary");
                });

            modelBuilder.Entity("HealthCare.Models.OpCheckingModel", b =>
                {
                    b.Property<string>("PatientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastupdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastupdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientId");

                    b.ToTable("SHfdOpCheckingModel");
                });

            modelBuilder.Entity("HealthCare.Models.OtSurgeryModel", b =>
                {
                    b.Property<string>("OtScheduleID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SurgeryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("lastUpdatedMachine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastupdatedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OtScheduleID", "SurgeryID");

                    b.ToTable("OtSurgeryModel");
                });

            modelBuilder.Entity("HealthCare.Models.OtTableMasterModel", b =>
                {
                    b.Property<string>("TableID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdditionalFeature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastupdatedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TableID");

                    b.ToTable("SHotTableMaster");
                });

            modelBuilder.Entity("HealthCare.Models.PatientBillDetailsModel", b =>
                {
                    b.Property<string>("BillID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DateandTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Particulars")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Units")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BillID", "DetailID");

                    b.ToTable("SHPatientBillDetails");
                });

            modelBuilder.Entity("HealthCare.Models.PatientBillModel", b =>
                {
                    b.Property<string>("BillID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CaseVisitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BillDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("TotalBillAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BillID", "CaseVisitID", "PatientID");

                    b.ToTable("SHPatientBill");
                });

            modelBuilder.Entity("HealthCare.Models.PatientDiagnosisModel", b =>
                {
                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VisitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ExamID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiagnosisID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lasrUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientID", "VisitID", "ExamID", "DiagnosisID");

                    b.ToTable("SHEXMdiagnosis");
                });

            modelBuilder.Entity("HealthCare.Models.PatientEPrescriptionModel", b =>
                {
                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CaseVisitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OrderID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DrugID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EpressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EpressID"));

                    b.Property<string>("FillDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FrequencyUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PrescriptionDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteAdmin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastupdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientID", "CaseVisitID", "OrderID", "DrugID");

                    b.ToTable("SHprsPrescription");
                });

            modelBuilder.Entity("HealthCare.Models.PatientEPrescriptionPrintModel", b =>
                {
                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CaseVisitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OrderID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FrequencyUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicactionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastupdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientID", "CaseVisitID", "OrderID");

                    b.ToTable("SHprsPrescriptionPrint");
                });

            modelBuilder.Entity("HealthCare.Models.PatientFHPHMasterModel", b =>
                {
                    b.Property<string>("QuestionID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionID");

                    b.ToTable("PatExmFHPH");
                });

            modelBuilder.Entity("HealthCare.Models.PatientProcedureModel", b =>
                {
                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VisitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ExamID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProcedureID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lasrUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientID", "VisitID", "ExamID", "ProcedureID");

                    b.ToTable("SHEXMprocedure");
                });

            modelBuilder.Entity("HealthCare.Models.PatientRadiolodyModel", b =>
                {
                    b.Property<string>("RadioID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FacilityID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ScreeningDate")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ReferralDoctorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferralDoctorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScreeningCompleted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScreeningCompletedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrVisitcaseID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitcaseID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RadioID", "FacilityID", "PatientID", "ScreeningDate");

                    b.ToTable("SHPatientRadiology");
                });

            modelBuilder.Entity("HealthCare.Models.PatientTestModel", b =>
                {
                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FacilityID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TestID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TestDateTime")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ExptRsltDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferDocID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultPublish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TsampleClt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TsampleCltDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitcaseID1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientID", "FacilityID", "TestID", "TestDateTime");

                    b.ToTable("SHPatientTest");
                });

            modelBuilder.Entity("HealthCare.Models.PatientVisitIntoDocumentModel", b =>
                {
                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FacilityID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VisitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("lastUpdatedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientID", "FacilityID", "VisitID");

                    b.ToTable("PatientVisitIntoDocumentModel");
                });

            modelBuilder.Entity("HealthCare.Models.ProcedureCodeMasterModel", b =>
                {
                    b.Property<string>("ProcedureID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CPTCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetCost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherCodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcedureCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcedureCodeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcedureCodeStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcedureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxPercentage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WHODescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProcedureID");

                    b.ToTable("SHclnProcedureCodeMaster");
                });

            modelBuilder.Entity("HealthCare.Models.RadiologyMasterModel", b =>
                {
                    b.Property<string>("RadioID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Cost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RadioName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RadioID");

                    b.ToTable("SHRadioMaster");
                });

            modelBuilder.Entity("HealthCare.Models.ResourceScheduleModel", b =>
                {
                    b.Property<string>("StaffID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FacilityID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Viewslot")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StrIsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ToDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffID", "FacilityID", "Viewslot");

                    b.ToTable("SHclnViewResourceSchedule");
                });

            modelBuilder.Entity("HealthCare.Models.ResourceTypeMasterModel", b =>
                {
                    b.Property<string>("ResourceTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ResourceTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResourceTypeID");

                    b.ToTable("SHclnResourseTypeMaster");
                });

            modelBuilder.Entity("HealthCare.Models.RollAccessModel", b =>
                {
                    b.Property<string>("RollID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Access")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Authorized")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScreenID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RollID");

                    b.ToTable("SHClnRollAccess");
                });

            modelBuilder.Entity("HealthCare.Models.RoomTypeMasterModel", b =>
                {
                    b.Property<string>("RoomTypeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdditionFeature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdditionalCost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastupdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomTypeID");

                    b.ToTable("SHclnRoomTypeMaster");
                });

            modelBuilder.Entity("HealthCare.Models.ScreenMasterModel", b =>
                {
                    b.Property<string>("ScreenId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ScreenName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScreenId");

                    b.ToTable("SHClnScreenMaster", t =>
                        {
                            t.HasTrigger("dbo.Trigger_shclnscreenmaster");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("HealthCare.Models.SeverityModel", b =>
                {
                    b.Property<string>("SeverityID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Active")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastupdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastupdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeverityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SeverityID");

                    b.ToTable("SHSeverityModel");
                });

            modelBuilder.Entity("HealthCare.Models.StaffAdminModel", b =>
                {
                    b.Property<string>("StrStaffID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastupdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastupdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceTypeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrAddress1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrAddress2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrAge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrDateofBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrEmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrGender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIdProofId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIdProofName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrInitial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMedialLicenseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrNationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrPin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrPrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrUserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StrStaffID");

                    b.ToTable("SHclnStaffAdminModel");
                });

            modelBuilder.Entity("HealthCare.Models.StaffAttendanceModel", b =>
                {
                    b.Property<string>("StaffID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CheckInTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckOuTtime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Office")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffID", "Date");

                    b.ToTable("SHStaffAttendance");
                });

            modelBuilder.Entity("HealthCare.Models.StaffFacilityMappingModel", b =>
                {
                    b.Property<string>("StaffId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FacilityID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Active")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromHour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToHour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastupdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffId", "FacilityID");

                    b.ToTable("SHclnStaffFacilityMapping");
                });

            modelBuilder.Entity("HealthCare.Models.SurgeryTypeMasterModel", b =>
                {
                    b.Property<string>("SurgeryTypeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SurgeryTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastupdatedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SurgeryTypeID");

                    b.ToTable("SHotSurgerTypeymaster");
                });

            modelBuilder.Entity("HealthCare.Models.TestMasterModel", b =>
                {
                    b.Property<string>("TestID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Cost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Range")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TestID");

                    b.ToTable("SHTestMaster");
                });

            modelBuilder.Entity("HealthCare.Models.UpdateRadiologyResultsModel", b =>
                {
                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FacilityID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RadioID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImageID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImageData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ResultImage")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientID", "FacilityID", "RadioID", "ImageID");

                    b.ToTable("SHUpdateRadiologyResult");
                });

            modelBuilder.Entity("HealthCare.Models.WebErrorsModel", b =>
                {
                    b.Property<string>("ErrodDesc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ErrDateTime")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ScreenName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ErrodDesc", "ErrDateTime", "ScreenName");

                    b.ToTable("SHWebErrors");
                });

            modelBuilder.Entity("HealthCare.Models.WebLogsModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ModifedTime1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewValues")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedColumns")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SHWebLogs");
                });

            modelBuilder.Entity("PatExmSymptomsSeverity", b =>
                {
                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FacilityID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VisitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ExaminationID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Symptoms")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Severity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientID", "FacilityID", "VisitID", "ExaminationID", "Symptoms");

                    b.ToTable("SHExmSeverity");
                });

            modelBuilder.Entity("PatientExaminationModel", b =>
                {
                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FacilityID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VisitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ExaminationID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Complaint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnosis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FollowUp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientID", "FacilityID", "VisitID", "ExaminationID");

                    b.ToTable("SHExmPatientExamination");
                });

            modelBuilder.Entity("PatientFHPHModel", b =>
                {
                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("QuestionID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientID", "QuestionID", "Type");

                    b.ToTable("SHExmPatientFHPH");
                });

            modelBuilder.Entity("PatientObjectiveModel", b =>
                {
                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FacilityID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VisitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BldGluLvl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BloodPressure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheifComplaint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeartRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Height")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OxySat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PulseRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResptryRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temperature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientID", "FacilityID", "VisitID");

                    b.ToTable("SHExmPatientObjective");
                });

            modelBuilder.Entity("PatientRegistrationModel", b =>
                {
                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BloodGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CnctPrsnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmgcyCntNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDPrfName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDPrfNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MidName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rlnpatient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientID");

                    b.ToTable("SHPatientRegistration");
                });

            modelBuilder.Entity("PatientScheduleModel", b =>
                {
                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrlastUpdatedMachine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientID");

                    b.ToTable("SHPatientSchedule");
                });

            modelBuilder.Entity("DoctorScheduleModel", b =>
                {
                    b.HasOne("HealthCare.Models.ResourceScheduleModel", "Resource")
                        .WithMany()
                        .HasForeignKey("StaffID", "FacilityID", "Viewslot")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resource");
                });
#pragma warning restore 612, 618
        }
    }
}
